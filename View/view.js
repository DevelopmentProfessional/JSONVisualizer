// No Pad feature implementation (compact style, no comments elsewhere)
let noPadMode=false;let noPadElements=[];async function loadNoPadElements(){try{const r=await fetch('/NoPadElements.json');if(!r.ok)return;const j=await r.json();if(j.noPadElements)noPadElements=j.noPadElements;applyNoPadStyles();}catch{}}function toggleNoPadMode(){noPadMode=!noPadMode;const b=document.getElementById('noPadModeBtn');if(b)b.classList.toggle('btn-warning',noPadMode);if(noPadMode){enableNoPadSelection();}else{disableNoPadSelection();}}let noPadHoverOverlay=null;function enableNoPadSelection(){document.addEventListener('mousemove',noPadMouseMove,true);document.addEventListener('click',noPadClick,true);}function disableNoPadSelection(){document.removeEventListener('mousemove',noPadMouseMove,true);document.removeEventListener('click',noPadClick,true);removeNoPadHover();}function noPadMouseMove(e){if(!noPadMode)return;const el=getSelectableElement(e.target);if(!el)return;drawNoPadHover(el);}function getSelectableElement(el){while(el&&el!==document.body){if(el.id||el.classList.length>0)return el;el=el.parentElement;}return null;}function drawNoPadHover(el){if(!noPadHoverOverlay){noPadHoverOverlay=document.createElement('div');noPadHoverOverlay.style.position='fixed';noPadHoverOverlay.style.pointerEvents='none';noPadHoverOverlay.style.zIndex='2000';document.body.appendChild(noPadHoverOverlay);}const r=el.getBoundingClientRect();noPadHoverOverlay.style.left=r.left+'px';noPadHoverOverlay.style.top=r.top+'px';noPadHoverOverlay.style.width=r.width+'px';noPadHoverOverlay.style.height=r.height+'px';noPadHoverOverlay.style.outline='2px solid yellow';noPadHoverOverlay.style.background='rgba(255,255,0,0.05)';}function removeNoPadHover(){if(noPadHoverOverlay){noPadHoverOverlay.remove();noPadHoverOverlay=null;}}function noPadClick(e){if(!noPadMode)return;const el=getSelectableElement(e.target);if(!el)return;e.preventDefault();e.stopPropagation();const id=buildNoPadId(el);if(!id)return;if(!noPadElements.includes(id)){noPadElements.push(id);applyNoPadToElement(el);}else{noPadElements=noPadElements.filter(x=>x!==id);restorePadding(el);}saveNoPadElements();}function buildNoPadId(el){if(el.id)return '#'+el.id;const cls=[...el.classList].join('.');if(cls)return el.tagName.toLowerCase()+'.'+cls;return null;}function applyNoPadStyles(){noPadElements.forEach(sel=>{const list=resolveSelector(sel);list.forEach(el=>applyNoPadToElement(el));});}function resolveSelector(sel){if(sel.startsWith('#')){const el=document.getElementById(sel.substring(1));return el?[el]:[];}if(sel.includes('.')){const parts=sel.split('.');const tag=parts.shift();const cls=parts.join('.');return [...document.querySelectorAll(tag+ (cls?'.'+cls:''))];}return [...document.querySelectorAll(sel)];}function applyNoPadToElement(el){if(!el.dataset._origPad){el.dataset._origPad=el.style.padding||'';el.dataset._origMarg=el.style.margin||'';}el.style.padding='0';el.style.margin='0';}function restorePadding(el){if(el.dataset._origPad!==undefined)el.style.padding=el.dataset._origPad;else el.style.removeProperty('padding');if(el.dataset._origMarg!==undefined)el.style.margin=el.dataset._origMarg;else el.style.removeProperty('margin');}function saveNoPadElements(){fetch('/NoPadElements.json',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({noPadElements})}).catch(()=>{});}document.addEventListener('DOMContentLoaded',()=>{loadNoPadElements();});
